{
  "ver": "1.0.25",
  "uuid": "ade7b518-4de0-4ed5-a750-467d482b9b85",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nuniform vec4 cc_time;\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nuniform vec2 u_resolution;\nfloat waterHighlight(vec2 p, float time, float foaminess)\n{\n  vec2 i = vec2(p);\n  float c = 0.0;\n  float foaminess_factor = mix(1.0, 6.0, foaminess);\n  float inten = .005 * foaminess_factor;\n  for (int n = 0; n < 8; n++)\n  {\n    float t = time * (1.0 - (3.5 / float(n+1)));\n    i = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(t + i.x));\n    c += 1.0/length(vec2(p.x / (sin(i.x+t)),p.y / (cos(i.y+t))));\n  }\n  c = 0.2 + c / (inten * float(8));\n  c = 1.17-pow(c, 1.4);\n    c = pow(abs(c), 8.0);\n  return c / sqrt(foaminess_factor);\n}\nvoid main () {\n  float time = cc_time.x * 0.1+23.0;\n  vec2 uv_square = vec2(v_uv0.x * u_resolution.x / u_resolution.y, v_uv0.y);\n  float dist_center = pow(2.0*length(v_uv0 - 0.5), 2.0);\n  float foaminess = smoothstep(0.4, 1.8, dist_center);\n  float clearness = 0.1 + 0.9*smoothstep(0.1, 0.5, dist_center);\n  vec2 p = mod(uv_square*6.28318530718*1.0, 6.28318530718)-250.0;\n  float c = waterHighlight(p, time, foaminess);\n  vec3 water_color = vec3(0.0, 0.35, 0.5);\n  vec3 color = vec3(c);\n  color = clamp(color + water_color, 0.0, 1.0);\n  color = mix(water_color, color, clearness);\n  gl_FragColor = vec4(color, 1.0);\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nuniform FoamyWater {\n  vec2 u_resolution;\n};\nfloat waterHighlight(vec2 p, float time, float foaminess)\n{\n  vec2 i = vec2(p);\n  float c = 0.0;\n  float foaminess_factor = mix(1.0, 6.0, foaminess);\n  float inten = .005 * foaminess_factor;\n  for (int n = 0; n < 8; n++)\n  {\n    float t = time * (1.0 - (3.5 / float(n+1)));\n    i = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(t + i.x));\n    c += 1.0/length(vec2(p.x / (sin(i.x+t)),p.y / (cos(i.y+t))));\n  }\n  c = 0.2 + c / (inten * float(8));\n  c = 1.17-pow(c, 1.4);\n    c = pow(abs(c), 8.0);\n  return c / sqrt(foaminess_factor);\n}\nvoid main () {\n  float time = cc_time.x * 0.1+23.0;\n  vec2 uv_square = vec2(v_uv0.x * u_resolution.x / u_resolution.y, v_uv0.y);\n  float dist_center = pow(2.0*length(v_uv0 - 0.5), 2.0);\n  float foaminess = smoothstep(0.4, 1.8, dist_center);\n  float clearness = 0.1 + 0.9*smoothstep(0.1, 0.5, dist_center);\n  vec2 p = mod(uv_square*6.28318530718*1.0, 6.28318530718)-250.0;\n  float c = waterHighlight(p, time, foaminess);\n  vec3 water_color = vec3(0.0, 0.35, 0.5);\n  vec3 color = vec3(c);\n  color = clamp(color + water_color, 0.0, 1.0);\n  color = mix(water_color, color, clearness);\n  gl_FragColor = vec4(color, 1.0);\n}"
      }
    }
  ],
  "subMetas": {}
}